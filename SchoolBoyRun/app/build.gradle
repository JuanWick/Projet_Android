apply plugin: 'com.android.application'
apply plugin: 'realm-android'

configurations { natives }

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "fr.esgi.schoolboyrun"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
        instrumentTest.setRoot('tests')
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.google.android.gms:play-services-auth:11.8.0'
    implementation 'com.google.android.gms:play-services-games:11.8.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation files('libs/core-1.0.jar')
    implementation 'com.badlogicgames.gdx:gdx-backend-android:1.9.8'
    implementation 'com.badlogicgames.gdx:gdx-box2d:1.9.8'
    compile 'com.google.android.gms:play-services-auth:11.8.0'
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-x86"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-x86_64"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:1.9.8:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:1.9.8:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:1.9.8:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:1.9.8:natives-x86"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:1.9.8:natives-x86_64"
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
task copyAndroidNatives() {
    file("libs/armeabi/").mkdirs();
    file("libs/armeabi-v7a/").mkdirs();
    file("libs/arm64-v8a/").mkdirs();
    file("libs/x86_64/").mkdirs();
    file("libs/x86/").mkdirs();

    configurations.natives.files.each { jar ->
        def outputDir = null
        if(jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
        if(jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
        if(jar.name.endsWith("natives-armeabi.jar")) outputDir = file("libs/armeabi")
        if(jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
        if(jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
        if(outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}

task run(type: Exec) {
    def path
    def localProperties = project.file("../local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        if (sdkDir) {
            path = sdkDir
        } else {
            path = "$System.env.ANDROID_HOME"
        }
    } else {
        path = "$System.env.ANDROID_HOME"
    }

    def adb = path + "/platform-tools/adb"
    commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.mygdx.game/com.mygdx.game.AndroidLauncher'
}
